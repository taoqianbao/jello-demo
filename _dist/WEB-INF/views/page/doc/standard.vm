#extends("page/layout/3columns.vm")

#block("sidebar")
    #widget("widget/sidebarmenus/sidebarmenus.vm" "var:menus=$menus.get(0).children")
#end

#block("sidebarSecondary")
    ## 注意只里面的 with:$sidebar 意思是将当前 sidebar 变量对象中的所有属性作为 widget 里面的局部变量。
    #widget("widget/sidebarmenus/sidebarmenus.vm" "with:$sidebar")
#end

#block("content")
    ## 内嵌 markdown 文件，这是编译期做得事情。
    <div class="markdown">
    <p>在 jello 中开发项目需要遵循一定的目录规范。</p>
<p>一个完整的项目包括两部分</p>
<ul>
<li>前端部分：包含图片、样式、脚本、模板等一列前端资源。</li>
<li>后端部分：各类 java 资源 jar 配置项文件等。</li>
</ul>
<p>jello 的开发模式是让前端同学主要负责前端部分，编写 velocity 模板文件、js、css等，脱离后端环境直接在 jello 的环境里面运行。<br>后端同学主要负责后端数据的获取和页面渲染逻辑，合并前端编译产出，完成整个项目的开发。</p>
<p>这样的好处是只要制定好数据格式便可以并行开发。</p>
<h2 id="%E5%89%8D%E7%AB%AF%E7%9B%AE%E5%BD%95">前端目录</h2>
<pre><code>├── fis-conf<span class="hljs-class">.js</span>
├── page
│   ├── doc
│   ├── examples
│   ├── index<span class="hljs-class">.vm</span>
│   └── layout
├── server<span class="hljs-class">.conf</span>
├── static
│   ├── favicon<span class="hljs-class">.ico</span>
│   ├── js
│   ├── libs
│   └── scss
├── test
│   ├── page
│   ├── page<span class="hljs-class">.json</span>
│   └── page<span class="hljs-class">.jsp</span>
└── widget
    ├── <span class="hljs-tag">footer</span>
    ├── <span class="hljs-tag">header</span>
    └── sidebarmenus
</code></pre><h3 id="%E8%AF%B4%E6%98%8E">说明</h3>
<ul>
<li><code>fis-conf.js</code> 用来设置 fis 编译配置。</li>
<li><code>page</code> 用来存放各类页面级模板文件(.vm), 可以直接在jello 环境下预览。<ul>
<li><code>layout</code> 骨架 vm</li>
</ul>
</li>
<li><code>static</code> 用来存放各类静态资源，如：JS、CSS、image、swf...</li>
<li><code>test</code> 用来存放各类测试数据</li>
<li><code>widget</code> 用来存放页面小片段，方便其他页面引用。</li>
</ul>
<h2 id="%E4%BA%A7%E5%87%BA%E7%9B%AE%E5%BD%95">产出目录</h2>
<pre><code>├── WEB-INF
│   ├── config
│   │   └── <span class="hljs-built_in">map</span>.json
│   ├── views
│   │   ├── page
│   │   └── widget
├── <span class="hljs-keyword">static</span>
└── test
</code></pre><p>将 jello 前端模块编译产出目录如上</p>
<ul>
<li><code>WEB-INF/config/map.json</code> 静态资源表，便于后端定位静态资源。</li>
<li><code>WEB-INF/views</code> velocity 模板文件</li>
<li><code>static</code> 静态资源，如果静态资源部署到了cdn 服务器上，后端环境则不需要此文件夹</li>
<li><code>test</code> 用于本地环境调试，后端程序无需关注。</li>
</ul>

    </div>
#end



  ## auto inject by fis3-preprocess-extlang
  #require("page/doc/standard.vm")
#end
